package t01.main.java;

import java.io.*;
import java.util.ArrayList;
import java.util.HashMap;

public class Test {

    private static ArrayList<String> javaKeyWords = javaKeyWords("javase04/src/t01/main/resources/java_words.txt");

//    public static StringBuilder readFile(String fileName) {
//        try (BufferedReader bufferedReader = new BufferedReader(new FileReader(fileName))) {
//            String line;
//            StringBuilder stringBuilder = new StringBuilder();
//            while ((line = bufferedReader.readLine()) != null) {
//                stringBuilder.append(line + " ");
//            }
//            return stringBuilder;
//        } catch (FileNotFoundException e) {
//            System.out.println(String.format("File %s doesn't exist ", fileName));
//            return null;
//        } catch (IOException e) {
//            System.out.println("IO error");
//            return null;
//        }
//    }
    public static StringBuilder readFile(String fileName) {
        try (FileInputStream fileInputStream = new FileInputStream(fileName)) {
            int c;
            StringBuilder stringBuilder = new StringBuilder();
            while ((c = fileInputStream.read()) != -1) {
                stringBuilder.append((char) c);
            }
            return stringBuilder;
        } catch (FileNotFoundException e) {
            System.out.println(String.format("File %s doesn't exist ", fileName));
            return null;
        } catch (IOException e) {
            System.out.println("IO error");
            return null;
        }
    }

    public static boolean isJavaWord (String word) {
        return javaKeyWords.contains(word);
    }

    public static HashMap<String, Integer> analyseWords(StringBuilder stringBuilder) {
        String[] split = stringBuilder.toString().split(" ");
        HashMap<String, Integer> map = new HashMap<>();
        int defaultWordsCounter = 1;
        for (String word : split) {
            if (isJavaWord(word)) {
                if (map.get(word) != null) {
                    map.put(word, map.get(word) + 1);
                } else {
                    map.put(word, defaultWordsCounter);
                }
            }
        }
        return map;
    }

    public static ArrayList<String> javaKeyWords (String filePath) {
        try (BufferedReader bufferedReader = new BufferedReader(new FileReader(filePath))) {
            String line;
            ArrayList<String> list = new ArrayList<>();
            while ((line = bufferedReader.readLine()) != null) {
                list.add(line);
            }
            return list;
        } catch (FileNotFoundException e) {
            System.out.println(String.format("File %s doesn't exist ", filePath));
            return null;
        } catch (IOException e) {
            System.out.println("IO error");
            return null;
        }
    }


//    public static void writeInFile (HashMap<String, Integer> inputFile) {
//        try (OutputStream outputStream
//                     = new FileOutputStream("javase04/src/t01/main/resources/output_words.txt")) {
//            outputStream.write(inputFile.forEach(););
//        }
//    }

    public static void main(String[] args) {
        analyseWords(
                readFile("javase04/src/t01/main/resources/words.txt"))
                .forEach((k, v) -> {
                    System.out.println(k + " : " + v);
                });

    }
}
